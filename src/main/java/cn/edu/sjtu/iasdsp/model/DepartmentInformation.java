package cn.edu.sjtu.iasdsp.model;
// Generated 2017-7-5 20:36:16 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * DepartmentInformations generated by hbm2java
 */
@Entity
@Table(name = "department_informations", catalog = "isdsp_dev")
public class DepartmentInformation implements java.io.Serializable {

	private Integer id;
	private String name;
	private Integer parentDepartmentId;
	private String description;
	private Integer layer;
	private Integer managerId;
	private Integer viceManagerId;
	private String duty;
	private Date createdAt;
	private Date updatedAt;
	private Set<WorkflowPrivilege> editWorkflowInformations;
	private Set<WorkflowPrivilege> deleteWorkflowInformations;
	private Set<WorkflowPrivilege> executeWorkflowInformations;
	private Set<WorkflowPrivilege> showWorkflowInformations;
	private Set<SharedProcessRecord> executeSharedProcessRecords;

	private Set<User> users;

	public DepartmentInformation() {
	}

	public DepartmentInformation(Date createdAt, Date updatedAt) {
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public DepartmentInformation(String name, Integer parentDepartmentId, String description, Integer layer,
			Integer managerId, Integer viceManagerId, String duty, Date createdAt, Date updatedAt) {
		this.name = name;
		this.parentDepartmentId = parentDepartmentId;
		this.description = description;
		this.layer = layer;
		this.managerId = managerId;
		this.viceManagerId = viceManagerId;
		this.duty = duty;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name", length = 65535)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "parent_department_id")
	public Integer getParentDepartmentId() {
		return this.parentDepartmentId;
	}

	public void setParentDepartmentId(Integer parentDepartmentId) {
		this.parentDepartmentId = parentDepartmentId;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "layer")
	public Integer getLayer() {
		return this.layer;
	}

	public void setLayer(Integer layer) {
		this.layer = layer;
	}

	@Column(name = "manager_id")
	public Integer getManagerId() {
		return this.managerId;
	}

	public void setManagerId(Integer managerId) {
		this.managerId = managerId;
	}

	@Column(name = "vice_manager_id")
	public Integer getViceManagerId() {
		return this.viceManagerId;
	}

	public void setViceManagerId(Integer viceManagerId) {
		this.viceManagerId = viceManagerId;
	}

	@Column(name = "duty", length = 65535)
	public String getDuty() {
		return this.duty;
	}

	public void setDuty(String duty) {
		this.duty = duty;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "editDepartment")
	public Set<WorkflowPrivilege> getEditWorkflowInformations() {
		return editWorkflowInformations;
	}

	public void setEditWorkflowInformations(Set<WorkflowPrivilege> editWorkflowInformations) {
		this.editWorkflowInformations = editWorkflowInformations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "deleteDepartment")
	public Set<WorkflowPrivilege> getDeleteWorkflowInformations() {
		return deleteWorkflowInformations;
	}

	public void setDeleteWorkflowInformations(Set<WorkflowPrivilege> deleteWorkflowInformations) {
		this.deleteWorkflowInformations = deleteWorkflowInformations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "executeDepartment")
	public Set<WorkflowPrivilege> getExecuteWorkflowInformations() {
		return executeWorkflowInformations;
	}

	public void setExecuteWorkflowInformations(Set<WorkflowPrivilege> executeWorkflowInformations) {
		this.executeWorkflowInformations = executeWorkflowInformations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "showDepartment")
	public Set<WorkflowPrivilege> getShowWorkflowInformations() {
		return showWorkflowInformations;
	}

	public void setShowWorkflowInformations(Set<WorkflowPrivilege> showWorkflowInformations) {
		this.showWorkflowInformations = showWorkflowInformations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "departmentInformation")
	public Set<User> getUsers() {
		return users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "executeDepartment")
	public Set<SharedProcessRecord> getExecuteSharedProcessRecords() {
		return executeSharedProcessRecords;
	}

	public void setExecuteSharedProcessRecords(Set<SharedProcessRecord> sharedProcessRecords) {
		this.executeSharedProcessRecords = sharedProcessRecords;
	}

	public String toString() {
		return "DepartmentInformation [id=" + id + ", name=" + name + "]";
	}
	
	
	

}
