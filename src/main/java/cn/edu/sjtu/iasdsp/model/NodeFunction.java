package cn.edu.sjtu.iasdsp.model;
// Generated 2017-7-5 20:36:16 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * NodeFunctions generated by hbm2java
 */
@Entity
@Table(name = "node_functions", catalog = "isdsp_dev")
public class NodeFunction implements java.io.Serializable {

	private Integer id;
	private NodeCategory nodeCategories;
	private NodeType nodeTypes;
	private String name;
	private String description;
	private Date createdAt;
	private Date updatedAt;
	private Set<NodeInformation> nodeInformationses = new HashSet<NodeInformation>(0);
	private Set<NodeOption> nodeOptionses = new HashSet<NodeOption>(0);
	private Set<NodeInformation> nodeInformationses_1 = new HashSet<NodeInformation>(0);
	private Set<NodeOption> nodeOptionses_1 = new HashSet<NodeOption>(0);

	public NodeFunction() {
	}

	public NodeFunction(Date createdAt, Date updatedAt) {
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}

	public NodeFunction(NodeCategory nodeCategories, NodeType nodeTypes, String name, String description,
			Date createdAt, Date updatedAt, Set<NodeInformation> nodeInformationses, Set<NodeOption> nodeOptionses,
			Set<NodeInformation> nodeInformationses_1, Set<NodeOption> nodeOptionses_1) {
		this.nodeCategories = nodeCategories;
		this.nodeTypes = nodeTypes;
		this.name = name;
		this.description = description;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.nodeInformationses = nodeInformationses;
		this.nodeOptionses = nodeOptionses;
		this.nodeInformationses_1 = nodeInformationses_1;
		this.nodeOptionses_1 = nodeOptionses_1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "node_category_id")
	public NodeCategory getNodeCategories() {
		return this.nodeCategories;
	}

	public void setNodeCategories(NodeCategory nodeCategories) {
		this.nodeCategories = nodeCategories;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "node_type_id")
	public NodeType getNodeTypes() {
		return this.nodeTypes;
	}

	public void setNodeTypes(NodeType nodeTypes) {
		this.nodeTypes = nodeTypes;
	}

	@Column(name = "name", length = 65535)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description", length = 65535)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nodeFunctions")
	public Set<NodeInformation> getNodeInformationses() {
		return this.nodeInformationses;
	}

	public void setNodeInformationses(Set<NodeInformation> nodeInformationses) {
		this.nodeInformationses = nodeInformationses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nodeFunctions")
	public Set<NodeOption> getNodeOptionses() {
		return this.nodeOptionses;
	}

	public void setNodeOptionses(Set<NodeOption> nodeOptionses) {
		this.nodeOptionses = nodeOptionses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nodeFunctions")
	public Set<NodeInformation> getNodeInformationses_1() {
		return this.nodeInformationses_1;
	}

	public void setNodeInformationses_1(Set<NodeInformation> nodeInformationses_1) {
		this.nodeInformationses_1 = nodeInformationses_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "nodeFunctions")
	public Set<NodeOption> getNodeOptionses_1() {
		return this.nodeOptionses_1;
	}

	public void setNodeOptionses_1(Set<NodeOption> nodeOptionses_1) {
		this.nodeOptionses_1 = nodeOptionses_1;
	}

}
