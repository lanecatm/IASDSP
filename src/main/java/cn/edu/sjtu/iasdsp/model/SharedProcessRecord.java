package cn.edu.sjtu.iasdsp.model;
// Generated 2017-7-5 20:36:16 by Hibernate Tools 5.2.3.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * SharedProcessPrivileges generated by hbm2java
 */
@Entity
@Table(name = "shared_process_records", catalog = "isdsp_dev")
public class SharedProcessRecord implements java.io.Serializable {

	private Integer id;
	private ProcessInformation processInformation;
	private WikiPage wikiPage;
	private WorkflowInformation workflowInformation;
	private WorkflowVersion workflowVersion;
	
	private DepartmentInformation executeDepartment;

	private DepartmentInformation editDepartment;
	private DepartmentInformation deleteDepartment;
	private User author;
	private User updator;

	
	private String name;
	private String description;
	
	private Boolean isSharedSampleInput;
	private Date createdAt;
	private Date updatedAt;
	
//	private Set<ProcessStar> processStars = new HashSet<ProcessStar>(0);
	private Set<ProcessInformation> subProcessInformations = new HashSet<ProcessInformation>(0);
	
	private Integer runningTime;
	private Integer allStar;
	private Integer starUserNumber;
	
	

	public SharedProcessRecord() {
	}

	public SharedProcessRecord(Date createdAt, Date updatedAt) {
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}



	public SharedProcessRecord(ProcessInformation processInformation, WikiPage wikiPage,
			WorkflowInformation workflowInformation,WorkflowVersion workflowVersion,
			DepartmentInformation executeDepartment, User author, User updator, String name,
			Boolean isSharedSampleInput, Date createdAt, Date updatedAt, Integer allStar, Integer starUserNumber, Integer runningTime) {
		this.processInformation = processInformation;
		this.wikiPage = wikiPage;
		this.workflowInformation = workflowInformation;
		this.workflowVersion = workflowVersion;
		this.executeDepartment = executeDepartment;
		this.author = author;
		this.updator = updator;
		this.name = name;
		this.isSharedSampleInput = isSharedSampleInput;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.allStar = allStar;
		this.starUserNumber = starUserNumber;
		this.runningTime = runningTime;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "name")
	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "description")
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "sharedProcessRecord")
	public ProcessInformation getProcessInformation() {
		return processInformation;
	}

	public void setProcessInformation(ProcessInformation processInformation) {
		this.processInformation = processInformation;
	}
	
		
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "wiki_page_id")
	public WikiPage getWikiPage() {
		return wikiPage;
	}

	public void setWikiPage(WikiPage wikiPage) {
		this.wikiPage = wikiPage;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "workflow_information_id")
	public WorkflowInformation getWorkflowInformation() {
		return workflowInformation;
	}

	public void setWorkflowInformation(WorkflowInformation workflowInformation) {
		this.workflowInformation = workflowInformation;
	}
	
	
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "workflow_version_id")
	public WorkflowVersion getWorkflowVersion() {
		return workflowVersion;
	}

	public void setWorkflowVersion(WorkflowVersion workflowVersion) {
		this.workflowVersion = workflowVersion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "edit_department_id")
	public DepartmentInformation getEditDepartment() {
		return editDepartment;
	}

	public void setEditDepartment(DepartmentInformation editDepartment) {
		this.editDepartment = editDepartment;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "execute_department_id")
	public DepartmentInformation getExecuteDepartment() {
		return executeDepartment;
	}

	public void setExecuteDepartment(DepartmentInformation executeDepartment) {
		this.executeDepartment = executeDepartment;
	}



	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "delete_department_id")
	public DepartmentInformation getDeleteDepartment() {
		return deleteDepartment;
	}

	public void setDeleteDepartment(DepartmentInformation deleteDepartment) {
		this.deleteDepartment = deleteDepartment;
	}
	
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id")
	public User getAuthor() {
		return author;
	}

	public void setAuthor(User author) {
		this.author = author;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updator_id")
	public User getUpdator() {
		return updator;
	}

	public void setUpdator(User updator) {
		this.updator = updator;
	}

	@Column(name = "is_shared_sample_input")
	public Boolean getIsSharedSampleInput() {
		return this.isSharedSampleInput;
	}
	
	public void setIsSharedSampleInput(Boolean isSharedSampleInput) {
		this.isSharedSampleInput = isSharedSampleInput;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}
	
	
//	
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sharedProcessRecord")
//	public Set<ProcessStar> getProcessStars() {
//		return processStars;
//	}
//
//	public void setProcessStars(Set<ProcessStar> processStars) {
//		this.processStars = processStars;
//	}

	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parentSharedProcessRecord")
	public Set<ProcessInformation> getSubProcessInformations() {
		return subProcessInformations;
	}

	public void setSubProcessInformations(Set<ProcessInformation> subProcessInformations) {
		this.subProcessInformations = subProcessInformations;
	}
	
	
	
	@Column(name = "running_time")
	public Integer getRunningTime() {
		return runningTime;
	}

	public void setRunningTime(Integer runningTime) {
		this.runningTime = runningTime;
	}

	@Column(name = "all_star")
	public Integer getAllStar() {
		return allStar;
	}

	public void setAllStar(Integer allStar) {
		this.allStar = allStar;
	}

	@Column(name = "star_user_number")
	public Integer getStarUserNumber() {
		return starUserNumber;
	}

	public void setStarUserNumber(Integer starUserNumber) {
		this.starUserNumber = starUserNumber;
	}	
	

}
