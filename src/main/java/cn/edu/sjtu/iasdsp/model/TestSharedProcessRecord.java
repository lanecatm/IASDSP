package cn.edu.sjtu.iasdsp.model;
// Generated 2017-7-5 20:36:16 by Hibernate Tools 5.2.3.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * SharedProcessPrivileges generated by hbm2java
 */
@Entity
@Table(name = "test_shared_process_records", catalog = "isdsp_dev")
public class TestSharedProcessRecord implements java.io.Serializable {

	private Integer id;
	private TestProcessInformation testProcessInformation;
	
	private Set<TestProcessInformation> subTestProcessInformations = new HashSet<TestProcessInformation>(0);
	private Integer runningTime;
	private Integer allStar;
	private Integer starUserNumber;	

	public TestSharedProcessRecord() {
	}

	
	public TestSharedProcessRecord(Integer runningTime, Integer allStar,
			Integer starUserNumber) {
		super();
		this.runningTime = runningTime;
		this.allStar = allStar;
		this.starUserNumber = starUserNumber;
	}


	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}



	@OneToOne(fetch = FetchType.LAZY, mappedBy = "testSharedProcessRecord")
	public TestProcessInformation getTestProcessInformation() {
		return testProcessInformation;
	}

	public void setTestProcessInformation(TestProcessInformation processInformation) {
		this.testProcessInformation = processInformation;
	}
	

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "parentTestSharedProcessRecord")
	public Set<TestProcessInformation> getSubTestProcessInformations() {
		return subTestProcessInformations;
	}

	public void setSubTestProcessInformations(Set<TestProcessInformation> subProcessInformations) {
		this.subTestProcessInformations = subProcessInformations;
	}
	
	
	@Column(name = "running_time")
	public Integer getRunningTime() {
		return runningTime;
	}

	public void setRunningTime(Integer runningTime) {
		this.runningTime = runningTime;
	}

	@Column(name = "all_star")
	public Integer getAllStar() {
		return allStar;
	}

	public void setAllStar(Integer allStar) {
		this.allStar = allStar;
	}

	@Column(name = "star_user_number")
	public Integer getStarUserNumber() {
		return starUserNumber;
	}

	public void setStarUserNumber(Integer starUserNumber) {
		this.starUserNumber = starUserNumber;
	}	
		
	

}
