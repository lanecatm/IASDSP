package cn.edu.sjtu.iasdsp.model;
// Generated 2017-7-5 20:36:16 by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "isdsp_dev", uniqueConstraints = { @UniqueConstraint(columnNames = "email"),
		@UniqueConstraint(columnNames = "reset_password_token") })
public class User implements java.io.Serializable {

	private Integer id;
	private String email;
	private String encryptedPassword;
	private String userName;
	private String personName;
	private String gender;
	private Date birthday;
	private String phoneNumber;
	private String resetPasswordToken;
	private Date resetPasswordSentAt;
	private Date rememberCreatedAt;
	private int signInCount;
	private Date currentSignInAt;
	private Date lastSignInAt;
	private String currentSignInIp;
	private String lastSignInIp;
	private Date createdAt;
	private Date updatedAt;
	private String role;
	private Set<UserPicture> userPictures = new HashSet<UserPicture>(0);
	private Set<WikiPage> wikiPagesesForUpdatorId = new HashSet<WikiPage>(0);
	private Set<WorkflowInformation> workflowInformations = new HashSet<WorkflowInformation>(0);
	private Set<WikiPage> wikiPagesesForCreatorId = new HashSet<WikiPage>(0);

	public User() {
	}

	public User(String email, String encryptedPassword, String userName, int signInCount) {
		this.email = email;
		this.encryptedPassword = encryptedPassword;
		this.userName = userName;
		this.signInCount = signInCount;
	}

	public User(String email, String encryptedPassword, String userName, String personName, String gender,
			Date birthday, String phoneNumber, String resetPasswordToken, Date resetPasswordSentAt,
			Date rememberCreatedAt, int signInCount, Date currentSignInAt, Date lastSignInAt, String currentSignInIp,
			String lastSignInIp, Date createdAt, Date updatedAt, String role, Set<UserPicture> userPictureses,
			Set<WikiPage> wikiPagesesForUpdatorId, 
			Set<WorkflowInformation> workflowInformationses, Set<WikiPage> wikiPagesesForCreatorId) {
		this.email = email;
		this.encryptedPassword = encryptedPassword;
		this.userName = userName;
		this.personName = personName;
		this.gender = gender;
		this.birthday = birthday;
		this.phoneNumber = phoneNumber;
		this.resetPasswordToken = resetPasswordToken;
		this.resetPasswordSentAt = resetPasswordSentAt;
		this.rememberCreatedAt = rememberCreatedAt;
		this.signInCount = signInCount;
		this.currentSignInAt = currentSignInAt;
		this.lastSignInAt = lastSignInAt;
		this.currentSignInIp = currentSignInIp;
		this.lastSignInIp = lastSignInIp;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.role = role;
		this.userPictures = userPictureses;
		this.wikiPagesesForUpdatorId = wikiPagesesForUpdatorId;
		this.workflowInformations = workflowInformationses;
		this.wikiPagesesForCreatorId = wikiPagesesForCreatorId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "email", unique = true, nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "encrypted_password", nullable = false)
	public String getEncryptedPassword() {
		return this.encryptedPassword;
	}

	public void setEncryptedPassword(String encryptedPassword) {
		this.encryptedPassword = encryptedPassword;
	}

	@Column(name = "user_name", nullable = false)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "person_name")
	public String getPersonName() {
		return this.personName;
	}

	public void setPersonName(String personName) {
		this.personName = personName;
	}

	@Column(name = "gender")
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "birthday", length = 19)
	public Date getBirthday() {
		return this.birthday;
	}

	public void setBirthday(Date birthday) {
		this.birthday = birthday;
	}

	@Column(name = "phone_number")
	public String getPhoneNumber() {
		return this.phoneNumber;
	}

	public void setPhoneNumber(String phoneNumber) {
		this.phoneNumber = phoneNumber;
	}

	@Column(name = "reset_password_token", unique = true)
	public String getResetPasswordToken() {
		return this.resetPasswordToken;
	}

	public void setResetPasswordToken(String resetPasswordToken) {
		this.resetPasswordToken = resetPasswordToken;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "reset_password_sent_at", length = 19)
	public Date getResetPasswordSentAt() {
		return this.resetPasswordSentAt;
	}

	public void setResetPasswordSentAt(Date resetPasswordSentAt) {
		this.resetPasswordSentAt = resetPasswordSentAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "remember_created_at", length = 19)
	public Date getRememberCreatedAt() {
		return this.rememberCreatedAt;
	}

	public void setRememberCreatedAt(Date rememberCreatedAt) {
		this.rememberCreatedAt = rememberCreatedAt;
	}

	@Column(name = "sign_in_count", nullable = false)
	public int getSignInCount() {
		return this.signInCount;
	}

	public void setSignInCount(int signInCount) {
		this.signInCount = signInCount;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "current_sign_in_at", length = 19)
	public Date getCurrentSignInAt() {
		return this.currentSignInAt;
	}

	public void setCurrentSignInAt(Date currentSignInAt) {
		this.currentSignInAt = currentSignInAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_sign_in_at", length = 19)
	public Date getLastSignInAt() {
		return this.lastSignInAt;
	}

	public void setLastSignInAt(Date lastSignInAt) {
		this.lastSignInAt = lastSignInAt;
	}

	@Column(name = "current_sign_in_ip")
	public String getCurrentSignInIp() {
		return this.currentSignInIp;
	}

	public void setCurrentSignInIp(String currentSignInIp) {
		this.currentSignInIp = currentSignInIp;
	}

	@Column(name = "last_sign_in_ip")
	public String getLastSignInIp() {
		return this.lastSignInIp;
	}

	public void setLastSignInIp(String lastSignInIp) {
		this.lastSignInIp = lastSignInIp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "role")
	public String getRole() {
		return this.role;
	}

	public void setRole(String role) {
		this.role = role;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "users")
	public Set<UserPicture> getUserPictures() {
		return this.userPictures;
	}

	public void setUserPictures(Set<UserPicture> userPictureses) {
		this.userPictures = userPictureses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUpdatorId")
	public Set<WikiPage> getWikiPagesesForUpdatorId() {
		return this.wikiPagesesForUpdatorId;
	}

	public void setWikiPagesesForUpdatorId(Set<WikiPage> wikiPagesesForUpdatorId) {
		this.wikiPagesesForUpdatorId = wikiPagesesForUpdatorId;
	}



	@OneToMany(fetch = FetchType.LAZY, mappedBy = "author")
	public Set<WorkflowInformation> getWorkflowInformations() {
		return this.workflowInformations;
	}

	public void setWorkflowInformations(Set<WorkflowInformation> workflowInformations) {
		this.workflowInformations = workflowInformations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByCreatorId")
	public Set<WikiPage> getWikiPagesesForCreatorId() {
		return this.wikiPagesesForCreatorId;
	}

	public void setWikiPagesesForCreatorId(Set<WikiPage> wikiPagesesForCreatorId) {
		this.wikiPagesesForCreatorId = wikiPagesesForCreatorId;
	}

}
