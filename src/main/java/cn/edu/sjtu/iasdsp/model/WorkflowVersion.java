package cn.edu.sjtu.iasdsp.model;

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Cascade;
import org.hibernate.annotations.CascadeType;

/**
 * WorkflowInformations generated by hbm2java
 */
@Entity
@Table(name = "workflow_versions", catalog = "isdsp_dev")
public class WorkflowVersion implements java.io.Serializable {

	private Integer id;
	private User author;
	private User updator;
	
	private WorkflowInformation workflowInformation;
	
	private String xml;
	private String svg;
	private String url;

	private String versionName;
	private String versionDescription;
	private Integer status;

	private Date validFrom;
	private Date validTo;
	private Boolean persistent;
	private Integer priority;
	private Integer mostPossibleDuration;
	private Integer minimalDuration;
	private Integer maximalDuration;

	private Date createdAt;
	private Date updatedAt;
	
	
	
	private Integer runningTime;
	private Integer allStar;
	private Integer starUserNumber;
	
	
	private WorkflowInformation defaultParentWorkflowInformation;
	
	
	private Set<ProcessInformation> processInformations = new HashSet<ProcessInformation>(0);

	private Set<SharedProcessRecord> sharedProcessRecords = new HashSet<SharedProcessRecord>(0);
	
	private Set<NodeInformation> nodeInformations = new HashSet<NodeInformation>(0);

	public WorkflowVersion() {
	}

	public WorkflowVersion(Date createdAt, Date updatedAt) {
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
	}
	




	public WorkflowVersion(User author, User updator, WorkflowInformation workflowInformation, String xml, String url,
			String versionName, String versionDescription, Integer status, Date createdAt, Date updatedAt,
			Integer runningTime, Integer allStar, Integer starUserNumber
			) {
		this.author = author;
		this.updator = updator;
		this.workflowInformation = workflowInformation;
		this.xml = xml;
		this.url = url;
		this.versionName = versionName;
		this.versionDescription = versionDescription;
		this.status = status;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this .runningTime = runningTime;
		this.allStar = allStar;
		this.starUserNumber = starUserNumber;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "author_id")
	public User getAuthor() {
		return this.author;
	}

	public void setAuthor(User users) {
		this.author = users;
	}

	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "workflow_information_id")
	public WorkflowInformation getWorkflowInformation() {
		return workflowInformation;
	}

	public void setWorkflowInformation(WorkflowInformation workflowInformation) {
		this.workflowInformation = workflowInformation;
	}

	@Column(name = "version_description", length = 65535)
	public String getVersionDescription() {
		return versionDescription;
	}

	public void setVersionDescription(String versionDescription) {
		this.versionDescription = versionDescription;
	}

	@Column(name = "version_name", length = 65535)
	public String getVersionName() {
		return this.versionName;
	}

	public void setVersionName(String versionName) {
		this.versionName = versionName;
	}

	

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "updator_id")
	public User getUpdator() {
		return updator;
	}

	public void setUpdator(User updator) {
		this.updator = updator;
	}

	@Column(name = "status")
	public Integer getStatus() {
		return this.status;
	}

	public void setStatus(Integer status) {
		this.status = status;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "valid_from", length = 19)
	public Date getValidFrom() {
		return this.validFrom;
	}

	public void setValidFrom(Date validFrom) {
		this.validFrom = validFrom;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "valid_to", length = 19)
	public Date getValidTo() {
		return this.validTo;
	}

	public void setValidTo(Date validTo) {
		this.validTo = validTo;
	}

	@Column(name = "persistent")
	public Boolean getPersistent() {
		return this.persistent;
	}

	public void setPersistent(Boolean persistent) {
		this.persistent = persistent;
	}

	@Column(name = "priority")
	public Integer getPriority() {
		return this.priority;
	}

	public void setPriority(Integer priority) {
		this.priority = priority;
	}

	@Column(name = "most_possible_duration")
	public Integer getMostPossibleDuration() {
		return this.mostPossibleDuration;
	}

	public void setMostPossibleDuration(Integer mostPossibleDuration) {
		this.mostPossibleDuration = mostPossibleDuration;
	}

	@Column(name = "minimal_duration")
	public Integer getMinimalDuration() {
		return this.minimalDuration;
	}

	public void setMinimalDuration(Integer minimalDuration) {
		this.minimalDuration = minimalDuration;
	}

	@Column(name = "maximal_duration")
	public Integer getMaximalDuration() {
		return this.maximalDuration;
	}

	public void setMaximalDuration(Integer maximalDuration) {
		this.maximalDuration = maximalDuration;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "xml", length = 65535)
	public String getXml() {
		return this.xml;
	}

	public void setXml(String xml) {
		this.xml = xml;
	}
	
	
	@Column(name = "svg", length = 65535)
	public String getSvg() {
		return this.svg;
	}

	public void setSvg(String svg) {
		this.svg = svg;
	}
	
	@Column(name = "url", length = 65535)
	public String getUrl() {
		return url;
	}

	public void setUrl(String url) {
		this.url = url;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workflowVersion")
	public Set<ProcessInformation> getProcessInformations() {
		return processInformations;
	}

	public void setProcessInformations(Set<ProcessInformation> processInformations) {
		this.processInformations = processInformations;
	}
	
	

	@Column(name = "running_time")
	public Integer getRunningTime() {
		return runningTime;
	}

	public void setRunningTime(Integer runningTime) {
		this.runningTime = runningTime;
	}

	@Column(name = "all_star")
	public Integer getAllStar() {
		return allStar;
	}

	public void setAllStar(Integer allStar) {
		this.allStar = allStar;
	}

	@Column(name = "star_user_number")
	public Integer getStarUserNumber() {
		return starUserNumber;
	}

	public void setStarUserNumber(Integer starUserNumber) {
		this.starUserNumber = starUserNumber;
	}


	@OneToOne(fetch = FetchType.LAZY, mappedBy = "defaultVersion")
	public WorkflowInformation getDefaultParentWorkflowInformation() {
		return defaultParentWorkflowInformation;
	}

	public void setDefaultParentWorkflowInformation(WorkflowInformation defaultParentWorkflowInformation) {
		this.defaultParentWorkflowInformation = defaultParentWorkflowInformation;
	}
	
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workflowVersion")
	public Set<SharedProcessRecord> getSharedProcessRecords() {
		return sharedProcessRecords;
	}

	public void setSharedProcessRecords(Set<SharedProcessRecord> sharedProcessRecords) {
		this.sharedProcessRecords = sharedProcessRecords;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "workflowVersion")
	@Cascade(CascadeType.DELETE)
	public Set<NodeInformation> getNodeInformations() {
		return nodeInformations;
	}

	public void setNodeInformations(Set<NodeInformation> nodeInformations) {
		this.nodeInformations = nodeInformations;
	}




}
